@import './variables';

// Media queries
@mixin media_query_xs {
  @media (max-width: $media-s - 1px) {
    @content;
  }
}
@mixin media_query_s {
  @media (min-width: $media-s + 0px) and (max-width: $media-m + 0px) {
    @content;
  }
}

@mixin media_query_m {
  @media (min-width: $media-m + 0px) and (max-width: $media-l + 0px) {
    @content;
  }
}

@mixin media_query_l {
  @media (min-width: $media-l + 0px) and (max-width: $media-xl + 0px) {
    @content;
  }
}

@mixin media_query_xl {
  @media (min-width: $media-xl + 0px) {
    @content;
  }
}

@mixin media_query_iterator($prefix) {
  @each $key in map-keys($media-queries-map) {
    @media (min-width: map-get($media-queries-map, $key) + 0px) {
      .#{$prefix}-#{$key} {
        @content;
      }
    }
  }
}

// cardinal
@mixin cardinal_iterator(
  $namespace: m,
  $property: margin,
  $base-amount: 1rem,
  $iterations-count: 4
) {
  @for $i from 1 through $iterations-count {
    $base-amount-computed: $i * $base-amount;

    .#{$namespace}-#{$i} {
      #{$property}: $base-amount-computed;
    }
    .#{$namespace}x-#{$i},
    .#{$namespace}l-#{$i} {
      #{$property}-left: $base-amount-computed;
    }
    .#{$namespace}y-#{$i},
    .#{$namespace}t-#{$i} {
      #{$property}-top: $base-amount-computed;
    }
    .#{$namespace}x-#{$i},
    .#{$namespace}r-#{$i} {
      #{$property}-right: $base-amount-computed;
    }
    .#{$namespace}y-#{$i},
    .#{$namespace}b-#{$i} {
      #{$property}-bottom: $base-amount-computed;
    }
  }
}

// Sizes
@mixin sizes_iterator(
  $namespace: ma,
  $property: margin,
  $base: 0.5rem,
  $step: 0.25rem,
  $iterations-count: 4
) {
  .#{$namespace}-0 {
    #{$property}: 0;
  }

  $computed-value: $base;

  @for $i from 1 through $iterations-count {
    .#{$namespace}-#{$i} {
      #{$property}: $computed-value;
    }

    $computed-value: $computed-value + $step;
  }
}

// Props Iterator
@mixin props_iterator($namespace: _, $property: $color, $map: ()) {
  @each $key in map-keys($map) {
    .#{$namespace}-#{$key} {
      #{$property}: map-get($map, $key);
    }
  }
}
